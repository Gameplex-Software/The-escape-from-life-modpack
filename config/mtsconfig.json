{
  "general": {
    "dumpCraftingConfig": {
      "value": false,
      "comment": "If true, then all recipes for all items in packs will be dumped into the config file at boot.  WARNING: this will overwrite your existing crafting overrides file!"
    },
    "opSignEditingOnly": {
      "value": false,
      "comment": "If true, only OPs will be able to edit signs on servers.  Does not affect client worlds."
    },
    "opPickupVehiclesOnly": {
      "value": false,
      "comment": "If true, only OPs will be able to pick up vehicles with wrenches.  Does not affect client worlds."
    },
    "creativePickupVehiclesOnly": {
      "value": false,
      "comment": "If true, vehicles can only be picked up in creative mode."
    },
    "keyRequiredToStartVehicles": {
      "value": false,
      "comment": "If true, vehicles can only be started if the player has the key in their hand."
    },
    "blockBreakage": {
      "value": true,
      "comment": "Whether or not vehicles and guns can break blocks when they hit them.  If false, vehicles will simply stop when they hit blocks, and guns won't break blocks when they hit them.  This will also disable explosive block breakage, though not explosions themselves."
    },
    "vehicleDestruction": {
      "value": true,
      "comment": "Whether or not vehicles can be destroyed by ramming into blocks at high speeds.  Set this to false if you don't like loosing vehicles to badly-placed walls."
    },
    "noclipVehicles": {
      "value": false,
      "comment": "If true, vehicles will not be able to collide with blocks.  This also prevents them from moving if they do not have wheels on them, as otherwise they would phase through the ground into the void."
    },
    "creativeDamage": {
      "value": false,
      "comment": "If true, damage from vehicles and guns will be applied to creative players."
    },
    "chunkloadVehicles": {
      "value": true,
      "comment": "If true, vehicles will be chunkloaded when on roads/tracks.  This allows them to travel into unloaded chunks."
    },
    "doLegacyLightCompats": {
      "value": true,
      "comment": "If true, legacy compatibility code will be performed on all models to make their lights work with newer versions.  This code will significantly slow down boot times due to needing to parse all models on boot, however, packs may not have functional lights without it.  Choose wisely if you want speed or features."
    },
    "useHSV": {
      "value": false,
      "comment": "If enabled, the MTS dev mode will export color values as HSV instead of hex."
    },
    "allPlanesWithNav": {
      "value": false,
      "comment": "If true, all planes will have the ability to use beacons for navigation.  This is false to allow pack authors to define new/old planes that have this capability, but can be turned on if you don't care about realism."
    },
    "devMode": {
      "value": false,
      "comment": "If enabled, MTS will allow access to the dev mode GUI while sitting in vehicles.  The GUI allows editing JSONs in-game without the need to restart."
    },
    "roadMaxLength": {
      "value": 32,
      "comment": "How long a single segment of road can be, in blocks.  While you can have longer segements, be aware they have more collision boxes and will generate more lag when broken or interacted with, and may not render if outside the chunk they are in.  Must be a whole number."
    },
    "aircraftSpeedFactor": {
      "value": 0.35,
      "comment": "Factor to apply to aircraft movement.  1 is the realistic value, but this makes vehicles move too fast for Minecraft. Adjust with caution."
    },
    "carSpeedFactor": {
      "value": 0.35,
      "comment": "Factor to apply to car movement.  1 is the realistic value, but this makes vehicles move too fast for Minecraft. Adjust with caution."
    },
    "fuelUsageFactor": {
      "value": 1.0,
      "comment": "Factor times which engines use fuel.  Change this if you think engines use fuel too fast or slow."
    },
    "engineHoursFactor": {
      "value": 1.0,
      "comment": "Factor times which engines hours accumulate.  Change this if you want to adjust how fast engines wear out."
    },
    "climbSpeed": {
      "value": 0.125,
      "comment": "How far a vehicle will 'climb' blocks every tick when the wheels go into the ground.  Higher values make vehicles climb blocks quicker at the cost of smooth movement."
    },
    "gravityFactor": {
      "value": 1.0,
      "comment": "Factor for gravitational forces applied to vehicles.  Can be adjusted if you think cars are too 'floaty'.  Does not affect aircraft."
    },
    "engineSpeedTempFactor": {
      "value": 1.0,
      "comment": "Factor for how RPM affects engine temp.  Higher values will make engines heat up quicker at higher RPMs."
    },
    "engineBiomeTempFactor": {
      "value": 1.0,
      "comment": "Factor for how biome temp affects engine temp.  Higher values will make engines heat up quicker in hotter biomes."
    },
    "packVehicleScales": {
      "value": {
        "auweschvebh": 1.0,
        "auweschveb": 1.0,
        "osog_import_nuckem_vaz": 1.0,
        "vkm59tbird": 1.0,
        "iv_tcp_v3_parts": 1.0,
        "craftspeedwheels": 1.0,
        "ivv": 1.0,
        "mts": 1.0,
        "craftspeed": 1.0,
        "ivairlinerpack": 1.0,
        "unuparts": 1.0,
        "iv_tcp_v3_civil": 1.0,
        "craftspeedplates": 1.0,
        "iv_tcp_v3_txs": 1.0,
        "iv_tpp": 1.0,
        "auweschvebm": 1.0,
        "unumilitary": 1.0,
        "craftspeedengines": 1.0,
        "iv_tcp_v3_utility": 1.0,
        "iavm": 1.0,
        "iav": 1.0
      },
      "comment": "Scale of all vheicles for this pack.  You probably won't want to change this, but if you do want the vehicles to be smaller for some reason, you can."
    },
    "packSpeedFactors": {
      "value": {
        "auweschvebh": 1.0,
        "auweschveb": 1.0,
        "osog_import_nuckem_vaz": 1.0,
        "vkm59tbird": 1.0,
        "iv_tcp_v3_parts": 1.0,
        "craftspeedwheels": 1.0,
        "ivv": 1.0,
        "mts": 1.0,
        "craftspeed": 1.0,
        "ivairlinerpack": 1.0,
        "unuparts": 1.0,
        "iv_tcp_v3_civil": 1.0,
        "craftspeedplates": 1.0,
        "iv_tcp_v3_txs": 1.0,
        "iv_tpp": 1.0,
        "auweschvebm": 1.0,
        "unumilitary": 1.0,
        "craftspeedengines": 1.0,
        "iv_tcp_v3_utility": 1.0,
        "iavm": 1.0,
        "iav": 1.0
      },
      "comment": "A mapping of pack-speciifc speed factors.  These values will only apply to the vehicles in the pack modified.  This allows for speeding up packs with slower vehicles, or slowing down packs with fast vehicles for a more even play experience.  Note that this applies on top of the global speed factor.  So if that is set to 0.30, and a pack is set to 0.5, then the total speed factor will be 0.15"
    },
    "itemWeights": {
      "comment1": "The following section is used for calculating item weights.  Any item that contains the text bits will have its weight multiplied by the following factor.",
      "comment2": "This mass factors into vehicle performance, with particular emphasis on vehicle payloads.  Some defaults are presented here, but you can add/remove to your liking.",
      "comment3": "Note that the part of the name searched is the item's registry name, NOT the in-game display name.  This is similar to what is in the /give command.",
      "weights": {
        "gold": 4.0,
        "diamond": 4.0,
        "ore": 2.5,
        "iron": 4.0,
        "coal": 2.0,
        "stone": 1.5
      }
    },
    "joinedPlayers": {
      "value": [
        "63b03531-6c90-4e53-804f-f3a056112872",
        "a4686b5b-2f26-4015-887d-c42382f3f73d"
      ],
      "comment": "Listing of players that have joined this world.  Players will be given the manual on their first join."
    }
  },
  "damage": {
    "explosions": {
      "value": true,
      "comment": "Whether or not vehicles explode when crashed or shot down."
    },
    "wheelBreakage": {
      "value": true,
      "comment": "Whether or not wheels can be broken (go flat)."
    },
    "wheelDamageIgnoreVelocity": {
      "value": false,
      "comment": "Whether or not velocity is ignored when calculating wheel damage."
    },
    "allowExternalDamage": {
      "value": false,
      "comment": "Whether or not non-IV things can damage vehicles.  This is normally false, as external damage is a hassle for most people, but can be true if you want other mod's guns to be able to attack vehicles in addition to IV's."
    },
    "propellerDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by a propeller."
    },
    "jetDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by a jet engine."
    },
    "wheelDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by wheels on vehicles."
    },
    "crashDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by crashes."
    },
    "bulletDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by bullets on vehicles."
    },
    "engineLeakProbability": {
      "value": 0.01,
      "comment": "Chance an engine will spring a leak if hit.  Explosions cause 10x this chance."
    },
    "crashItemDropPercentage": {
      "value": 0.75,
      "comment": "Percent that a crafting ingredient will be dropped when a vehicle is crashed.  Note that fire/explosions may destroy these items if enabled, so just because they drop does not mean you will get all of them."
    },
    "wheelDamageMinimumVelocity": {
      "value": 0.2,
      "comment": "Minimum velocity (blocks/second) which vehicles must be going to damage entities with their wheels."
    }
  },
  "fuel": {
    "comment1": "The following section is used for fuel configs for engines.  Each entry here is a single fuel type for engines.",
    "comment2": "Inside each entry exist values for the potency of the fluids that can be considered to be that fuel type.",
    "comment3": "You can make engines take different types of fluids for their fuels by editing these values.  See the in-game handbook for more information.",
    "comment4": "If you are having troubles getting the name for a particular fluid, run the game with the mods you want and check the 'lastLoadedFluids' list.  This contains all the fluids that were present during the last run of the game.",
    "fuels": {
      "diesel": {
        "creosote": 0.7,
        "diesel": 1.0,
        "lava": 1.0,
        "oil": 0.5,
        "biodiesel": 0.8
      },
      "furnace": {
        "lava": 1.0
      },
      "electric": {
        "lava": 1.0
      },
      "avgas": {
        "lava": 1.0,
        "gasoline": 1.0
      },
      "gasoline": {
        "lava": 1.0,
        "gasoline": 1.0,
        "ethanol": 0.85
      },
      "hydrogen": {
        "lava": 1.0
      },
      "water": {
        "lava": 1.0
      },
      "artron": {
        "lava": 1.0
      },
      "biodiesel": {
        "lava": 1.0
      }
    },
    "lastLoadedFluids": {
      "dragonsteel_ice": "Molten Ice Dragonsteel",
      "manyullyn": "Molten Manyullyn",
      "vibranium": "Molten Vibranium",
      "purpleslime": "Liquid Purple Slime",
      "palladium": "Molten Palladium",
      "zinc": "Molten Zinc",
      "liquidantimatter": "Liquid Antimatter",
      "lyon": "Molten Lyon",
      "biodiesel": "Biodiesel",
      "blazium": "Molten Blazium",
      "creeper_acid": "Creeper Acid",
      "napalm": "Napalm",
      "biofuel": "Biofuel",
      "milk": "Milk",
      "moglava": "fluid.moglava",
      "bronze": "Molten Bronze",
      "charger": "Liquid Charger",
      "varsium": "Molten Varsium",
      "silver": "Molten Silver",
      "liquidcoralium": "Liquid Coralium",
      "ooze": "fluid.ooze",
      "if.pink_slime": "Pink Slime",
      "steel": "Molten Steel",
      "elecanium": "Molten Elecanium",
      "xu_demonic_metal": "Molten Demon Metal",
      "diesel": "Diesel",
      "skeletal": "Molten Skeletal Metal",
      "crystal": "Crystallized Obsidian",
      "essence": "Essence",
      "hot_spring_water": "Hot Spring Water",
      "cobalt": "Molten Cobalt",
      "aluminum": "Molten Aluminum",
      "ethanol": "Ethanol",
      "clay": "Molten Clay",
      "gold": "Molten Gold",
      "candied_water": "Candied Water",
      "intertium": "Molten Intertium",
      "copper": "Molten Copper",
      "molten_gold": "Molten Gold",
      "xu_enchanted_metal": "Enchanted Metal",
      "molten_titanium": "Molten Titanium",
      "blaze_juice": "Blaze Juice",
      "electrum": "Molten Electrum",
      "mystite": "Molten Mystite",
      "biomass": "Biomass",
      "dragonsteel_fire": "Molten Fire Dragonsteel",
      "poison": "Poison",
      "amber": "Amber",
      "constantan": "Molten Constantan",
      "shyrestone": "Molten Shyrestone",
      "blood": "Blood",
      "lead": "Molten Lead",
      "fuelium": "Fuelium",
      "baronyte": "Molten Baronyte",
      "alubrass": "Molten Aluminum Brass",
      "limonite": "Molten Limonite",
      "if.ore_fluid_fermented": "Fermented Ore Meat",
      "uru": "Molten Uru",
      "adamantium": "Molten Adamantium",
      "soulshardsrespawn.corrupted": "Molten Corruption",
      "sewage": "Sewage",
      "xpjuice": "Experience",
      "knightslime": "Molten Knightslime",
      "latex": "Latex",
      "acid": "fluid.acid",
      "pigiron": "Molten Pigiron",
      "molten_titaniumgold": "Molten Titanium-Gold",
      "ender_sap": "Ender Sap",
      "tin": "Molten Tin",
      "ardite": "Molten Ardite",
      "rabbitooze": "fluid.rabbitooze",
      "dwarfstaralloy": "Molten Dwarf Star Alloy",
      "obsidian": "Molten Obsidian",
      "glass": "Molten Glass",
      "dirt": "Liquid Dirt",
      "sharacid": "fluid.sharacid",
      "brass": "Molten Brass",
      "water": "Water",
      "sand": "Quicksand",
      "ghoulish": "Molten Ghoulish Metal",
      "uranium": "Molten Uranium",
      "emerald": "Molten Emerald",
      "concrete": "Liquid Concrete",
      "titanium": "Molten Titanium",
      "gasoline": "Gasoline",
      "vesspoison": "fluid.vesspoison",
      "iridium": "Molten Iridium",
      "lava": "Lava",
      "oil": "Crude Oil",
      "honey": "Honey",
      "goldtitaniumalloy": "Molten Gold-Titanium-Alloy",
      "xu_evil_metal": "Evil Infused Iron",
      "if.protein": "Protein",
      "veshoney": "fluid.veshoney",
      "if.ore_fluid_raw": "Raw Ore Meat",
      "lunar": "Molten Lunar Metal",
      "rosite": "Molten Rosite",
      "creosote": "Creosote Oil",
      "nickel": "Molten Nickel",
      "potion": "Potion",
      "sludge": "Sludge",
      "blueslime": "Liquid Blue Slime",
      "emberstone": "Molten Emberstone",
      "ghastly": "Molten Ghastly Metal",
      "plantoil": "Plant Oil",
      "osmium": "Molten Osmium",
      "stone": "Seared Stone",
      "meat": "Liquid Meat",
      "iron": "Molten Iron",
      "lubricant": "Lubricant"
    }
  }
}